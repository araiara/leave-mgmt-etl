"""

Revision ID: f241cf14c77f
Revises: 95af75520e30
Create Date: 2024-06-02 10:36:00.184557

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = 'f241cf14c77f'
down_revision = '95af75520e30'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        """
        create or replace view dwh.leave_balance_for_current_fiscal_year as
            with taken_leaves as (
                select
                    employee_id, 
                    sum(leave_days) as total_taken_leaves,
                    fl.leave_type_id
                from dwh.fact_leaves fl
                join dwh.dim_fiscal_years fy
                    on fl.fiscal_id = fy.id
                    and fl.status = 'APPROVED'
                    and fy.is_current is true
                group by employee_id, fl.leave_type_id
            ), remaining_leaves as (
                select
                    employee_id,
                    total_taken_leaves, 
                    lt.name as leave_type,
                    case default_days
                        when 0 then 0
                        else default_days - total_taken_leaves
                    end as remaining_leaves
                from taken_leaves tl
                join dwh.dim_leave_types lt
                    on tl.leave_type_id = lt.id
            )
            select
                e.email,
                rl.*
            from remaining_leaves rl
            join dwh.dim_employees e 
                on rl.employee_id = e.user_id;
        """
    )
    op.execute(
        """
        create or replace view dwh.leave_distribution_by_designation as
            select
                sum(fl.leave_days) as total_leaves,
                d.name as designation,
                to_char(fy.start_date, 'Mon DD, YYYY') as fiscal_year_start
            from dwh.fact_leaves fl
            join dwh.dim_designations d
                on fl.designation_id = d.id
            join dwh.dim_fiscal_years fy
                on fl.fiscal_id = fy.id
            group by d.name, fy.start_date;
        """
    )
    op.execute(
        """
        create or replace view dwh.total_applied_leaves_per_month_per_fiscal_year as
            with applied_leaves as (
                select
                    leave_days,
                    to_char(start_date, 'Month') as start_month,
                    fiscal_id
                from dwh.fact_leaves
            )
            select
                sum(leave_days) as total_applied_leaves,
                start_month,
                to_char(start_date, 'Mon DD, YYYY') as fiscal_year_start
            from applied_leaves al
            join dwh.dim_fiscal_years fy
                on fy.id = al.fiscal_id
            group by start_month, fy.start_date
            order by total_applied_leaves desc;
        """
    )
    op.execute(
        """
        create or replace view dwh.total_applied_leaves_per_type_per_fiscal_year as
            with applied_leaves as (
                select
                    sum(leave_days) as total_applied_leaves,
                    leave_type_id,
                    status,
                    fiscal_id
                from dwh.fact_leaves
                group by fiscal_id, leave_type_id, status
                order by fiscal_id
            )
            select
                lt.name as leave_type,
                status,
                al.total_applied_leaves,
                to_char(start_date, 'Mon DD, YYYY') as fiscal_year_start,
                to_char(end_date, 'Mon DD, YYYY') as fiscal_year_end
            from applied_leaves al
            join dwh.dim_leave_types lt
                on al.leave_type_id = lt.id
            join dwh.dim_fiscal_years fy	
                on al.fiscal_id = fy.id;
        """
    )
    op.execute(
        """
        create or replace view dwh.total_leaves_per_fiscal_year_by_status as
            select
                sum(leave_days) as total_leaves,
                status,
                fy.start_date::date,
                fy.end_date::date
            from dwh.fact_leaves fl
            join dwh.dim_fiscal_years fy
                on fl.fiscal_id = fy.id
            group by fiscal_id, status, fy.start_date, fy.end_date;
        """
    )
    # ### end Alembic commands ###

    data_upgrades()

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP VIEW dwh.leave_balance_for_current_fiscal_year;")
    op.execute("DROP VIEW dwh.leave_distribution_by_designation;")
    op.execute("DROP VIEW dwh.total_applied_leaves_per_month_per_fiscal_year;")
    op.execute("DROP VIEW dwh.total_applied_leaves_per_type_per_fiscal_year;")
    op.execute("DROP VIEW dwh.total_leaves_per_fiscal_year_by_status;")
    # ### end Alembic commands ###

def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass
