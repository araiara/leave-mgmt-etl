"""

Revision ID: 95af75520e30
Revises: 
Create Date: 2024-05-29 18:53:38.577826

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = '95af75520e30'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SCHEMA IF NOT EXISTS std;")
    op.execute("CREATE SCHEMA IF NOT EXISTS dwh;")

    op.create_table('dim_departments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='dwh'
    )
    op.create_table('dim_designations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='dwh'
    )
    op.create_table('dim_employees',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('emp_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('emp_id'),
    schema='dwh'
    )
    op.create_table('dim_fiscal_years',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('is_current', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='dwh'
    )
    op.create_table('dim_leave_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('default_days', sa.Integer(), nullable=False),
    sa.Column('transferable_days', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='dwh'
    )
    op.create_table('flatfile',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('userId', sa.String(), nullable=True),
    sa.Column('empId', sa.String(), nullable=True),
    sa.Column('designationId', sa.String(), nullable=True),
    sa.Column('designationName', sa.String(), nullable=True),
    sa.Column('firstName', sa.String(), nullable=True),
    sa.Column('middleName', sa.String(), nullable=True),
    sa.Column('lastName', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('departmentDescription', sa.String(), nullable=True),
    sa.Column('startDate', sa.String(), nullable=True),
    sa.Column('endDate', sa.String(), nullable=True),
    sa.Column('leaveDays', sa.String(), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('leaveTypeId', sa.String(), nullable=True),
    sa.Column('leaveTypeName', sa.String(), nullable=True),
    sa.Column('defaultDays', sa.String(), nullable=True),
    sa.Column('transferableDays', sa.String(), nullable=True),
    sa.Column('fiscalId', sa.String(), nullable=True),
    sa.Column('fiscalStartDate', sa.String(), nullable=True),
    sa.Column('fiscalEndDate', sa.String(), nullable=True),
    sa.Column('fiscalIsCurrent', sa.String(), nullable=True),
    sa.Column('createdAt', sa.String(), nullable=True),
    sa.Column('updatedAt', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('departments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='std'
    )
    op.create_table('designations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='std'
    )
    op.create_table('fiscal_years',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('is_current', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='std'
    )
    op.create_table('leave_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('default_days', sa.Integer(), nullable=False),
    sa.Column('transferable_days', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='std'
    )
    op.create_table('fact_leaves',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('leave_days', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(), nullable=False),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('leave_type_id', sa.Integer(), nullable=False),
    sa.Column('fiscal_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('designation_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['dwh.dim_departments.id'], ),
    sa.ForeignKeyConstraint(['designation_id'], ['dwh.dim_designations.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['dwh.dim_employees.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['fiscal_id'], ['dwh.dim_fiscal_years.id'], ),
    sa.ForeignKeyConstraint(['leave_type_id'], ['dwh.dim_leave_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='dwh'
    )
    op.create_table('employees',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('emp_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('designation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['std.departments.id'], ),
    sa.ForeignKeyConstraint(['designation_id'], ['std.designations.id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('emp_id'),
    schema='std'
    )
    op.create_table('leaves',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('leave_days', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(), nullable=False),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('leave_type_id', sa.Integer(), nullable=False),
    sa.Column('fiscal_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['std.employees.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['fiscal_id'], ['std.fiscal_years.id'], ),
    sa.ForeignKeyConstraint(['leave_type_id'], ['std.leave_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='std'
    )
    # ### end Alembic commands ###

    data_upgrades()

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('leaves', schema='std')
    op.drop_table('employees', schema='std')
    op.drop_table('fact_leaves', schema='dwh')
    op.drop_table('leave_types', schema='std')
    op.drop_table('fiscal_years', schema='std')
    op.drop_table('designations', schema='std')
    op.drop_table('departments', schema='std')
    op.drop_table('flatfile')
    op.drop_table('dim_leave_types', schema='dwh')
    op.drop_table('dim_fiscal_years', schema='dwh')
    op.drop_table('dim_employees', schema='dwh')
    op.drop_table('dim_designations', schema='dwh')
    op.drop_table('dim_departments', schema='dwh')
    # ### end Alembic commands ###

def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass
